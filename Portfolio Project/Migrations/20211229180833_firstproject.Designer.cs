// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Portfolio_Project.Models;

namespace Portfolio_Project.Migrations
{
    [DbContext(typeof(PortfolioContext))]
    [Migration("20211229180833_firstproject")]
    partial class firstproject
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Portfolio_Project.Models.PicturePaths", b =>
                {
                    b.Property<int>("PictureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.HasKey("PictureID");

                    b.HasIndex("ProjectID");

                    b.ToTable("PicturePaths");
                });

            modelBuilder.Entity("Portfolio_Project.Models.Project_Tags", b =>
                {
                    b.Property<int>("Project_TagsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<int>("TagID")
                        .HasColumnType("int");

                    b.HasKey("Project_TagsID");

                    b.HasIndex("ProjectID");

                    b.HasIndex("TagID");

                    b.ToTable("Project_Tags");

                    b.HasData(
                        new
                        {
                            Project_TagsID = 1,
                            ProjectID = 1,
                            TagID = 1
                        },
                        new
                        {
                            Project_TagsID = 2,
                            ProjectID = 1,
                            TagID = 2
                        },
                        new
                        {
                            Project_TagsID = 3,
                            ProjectID = 1,
                            TagID = 3
                        },
                        new
                        {
                            Project_TagsID = 4,
                            ProjectID = 1,
                            TagID = 4
                        },
                        new
                        {
                            Project_TagsID = 5,
                            ProjectID = 1,
                            TagID = 5
                        },
                        new
                        {
                            Project_TagsID = 6,
                            ProjectID = 1,
                            TagID = 6
                        },
                        new
                        {
                            Project_TagsID = 7,
                            ProjectID = 1,
                            TagID = 11
                        });
                });

            modelBuilder.Entity("Portfolio_Project.Models.Projects", b =>
                {
                    b.Property<int>("ProjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("About")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GithubLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TechnicalSpecs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebLink")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectID");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectID = 1,
                            About = "<p>Non-Paw-Fit Animal Rescue is a web application developed in ASP.Net Core with the purpose of being able to manage a nonprofit&#39;s user accounts(employee and customer), donations, memberships, committies, event calendar, and also generate formatted reports.</p> <p>&nbsp;</p> <p>This project was created in collaboration with 4 other group members at Greenville Technical College. I primarily worked on the backend of the application however, I have touched nearly every corner of this project.</p>",
                            GithubLink = "https://github.com/thomasonbd/NonProfitProject",
                            Name = "Non-Paw-Fit Animal Rescue",
                            TechnicalSpecs = "<ul><li>ASP.Net Core v3.0</li><li>C#</li><li>Entity Framework Core</li><li>MSSQL</li><li>HTML/CSS</li><li>Github</li><li>Sourcetree</li><li>Azure Portal</li><li>Visual Studio</li><li>Javascript</li><li>Fast Report</li></ul>",
                            WebLink = ""
                        });
                });

            modelBuilder.Entity("Portfolio_Project.Models.Tags", b =>
                {
                    b.Property<int>("TagID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TagName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TagID");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            TagID = 1,
                            TagName = "HTML"
                        },
                        new
                        {
                            TagID = 2,
                            TagName = "CSS"
                        },
                        new
                        {
                            TagID = 3,
                            TagName = "Javascript"
                        },
                        new
                        {
                            TagID = 4,
                            TagName = "C#"
                        },
                        new
                        {
                            TagID = 5,
                            TagName = "ASP.Net Core"
                        },
                        new
                        {
                            TagID = 6,
                            TagName = "MSSQL"
                        },
                        new
                        {
                            TagID = 7,
                            TagName = "Java"
                        },
                        new
                        {
                            TagID = 8,
                            TagName = "JavaFX"
                        },
                        new
                        {
                            TagID = 9,
                            TagName = "Python"
                        },
                        new
                        {
                            TagID = 10,
                            TagName = "C++"
                        },
                        new
                        {
                            TagID = 11,
                            TagName = "Github"
                        });
                });

            modelBuilder.Entity("Portfolio_Project.Models.PicturePaths", b =>
                {
                    b.HasOne("Portfolio_Project.Models.Projects", "Project")
                        .WithMany("PicturePaths")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Portfolio_Project.Models.Project_Tags", b =>
                {
                    b.HasOne("Portfolio_Project.Models.Projects", "Project")
                        .WithMany("Project_Tags")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Portfolio_Project.Models.Tags", "Tag")
                        .WithMany("Project_Tags")
                        .HasForeignKey("TagID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
